{
	"info": {
		"_postman_id": "b268db1b-c358-4dc9-99bf-a2e4d2f49484",
		"name": "TMGI_Service_API",
		"description": "Following 3GPP TS 29.532 - Release 17.4.0\n\n- TMGI Allocate Service operation\n    \n- TMGI Deallocate Service operation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "36138359"
	},
	"item": [
		{
			"name": "TMGI_allocate",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Test 1: Check status code 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Test 2: Check data types of the allocated TMGI (response)\r",
							"const responseData = pm.response.json();\r",
							"pm.test(\"Check data types of the response\", () => {\r",
							"    pm.expect(responseData.tmgiList).to.be.an(\"array\");\r",
							"    pm.expect(responseData.tmgiList).to.not.be.empty;\r",
							"    pm.expect(responseData.expirationTime).to.be.a(\"string\");\r",
							"});\r",
							"\r",
							"// Save the response as variables\r",
							"pm.environment.set(\"tmgiAllocated\", JSON.stringify(responseData.tmgiList[0]))\r",
							"pm.environment.set(\"tmgiAllocatedExpiration\", responseData.expirationTime)\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"followRedirects": false,
				"protocolVersion": "http2"
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \"tmgiNumber\": 1 }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{smf_mb_smf_url}}/nmbsmf-tmgi/v1/tmgi",
					"protocol": "https",
					"host": [
						"{{smf_mb_smf_url}}"
					],
					"path": [
						"nmbsmf-tmgi",
						"v1",
						"tmgi"
					]
				}
			},
			"response": []
		},
		{
			"name": "TMGI_refresh",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Test 1: Check status code 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Test 2: Check data types of the refreshed TMGI (response)\r",
							"const responseData = pm.response.json();\r",
							"pm.test(\"Check data types of the response\", () => {\r",
							"    pm.expect(responseData.tmgiList).to.be.an(\"array\");\r",
							"    pm.expect(responseData.tmgiList).to.be.empty;\r",
							"    pm.expect(responseData.expirationTime).to.be.a(\"string\");\r",
							"});\r",
							"\r",
							"// Save the response as variables\r",
							"pm.environment.set(\"tmgiRefreshedExpiration\", responseData.expirationTime);\r",
							"\r",
							"// Test 3: Check the expiration time\r",
							"pm.test(\"Compare expirationTime between tmgiAllocated and tmgiRefreshed\", () => {\r",
							"    const tmgiAllocatedExpiration = new Date(pm.environment.get(\"tmgiAllocatedExpiration\"));\r",
							"    const tmgiRefreshedExpiration = new Date(pm.environment.get(\"tmgiRefreshedExpiration\"));\r",
							"\r",
							"    // Compare expiration times between the allocated TMGI and the refreshed TMGI\r",
							"    pm.expect(tmgiRefreshedExpiration).to.be.above(tmgiAllocatedExpiration);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"followRedirects": false,
				"protocolVersion": "http2"
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \"tmgiList\": [ {{tmgiAllocated}} ] }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{smf_mb_smf_url}}/nmbsmf-tmgi/v1/tmgi",
					"protocol": "https",
					"host": [
						"{{smf_mb_smf_url}}"
					],
					"path": [
						"nmbsmf-tmgi",
						"v1",
						"tmgi"
					]
				}
			},
			"response": []
		},
		{
			"name": "TMGI_deallocate",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Test 1: Check status code 204\r",
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"followRedirects": false,
				"protocolVersion": "http2"
			},
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://{{smf_mb_smf_url}}/nmbsmf-tmgi/v1/tmgi?tmgi-list=[{{tmgiAllocated}}]",
					"protocol": "https",
					"host": [
						"{{smf_mb_smf_url}}"
					],
					"path": [
						"nmbsmf-tmgi",
						"v1",
						"tmgi"
					],
					"query": [
						{
							"key": "tmgi-list",
							"value": "[{{tmgiAllocated}}]"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}